name: build-macos

on: [push, pull_request]

jobs:
  test:
    name: macoS Xcode ${{matrix.compiler.version}} ${{matrix.arch}} ${{matrix.build_type}}
    runs-on: macos-latest

    env:
      build-directory: build

    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64]
        build_type: [Debug, Release]
        compiler:
          - { name: "xcode", version: "12.3" }

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Prepare Environment
        run: |
          ls -ls /Applications/
          sudo xcode-select -switch /Applications/Xcode_${{matrix.compiler.version}}.app
          brew install ninja

          python -m pip install --upgrade pip
          pip install conan
          cmake -E make_directory ${{env.build-directory}}
          cmake -E chdir ${{env.build-directory}} conan install .. -s build_type=${{matrix.build_type}}

      - name: Configure
        working-directory: ${{env.build-directory}}
        env:
          CC: clang
          CXX: clang++
        run: |
          conan profile new --detect default
          cmake ..                                         \
             -GNinja                                       \
             -DCMAKE_BUILD_TYPE=${{matrix.build_type}}     \
             -DALLOY_COMPILE_SELF_CONTAINMENT_TESTS=On     \
             -DALLOY_COMPILE_TESTS=On                      \
             -DALLOY_COMPILE_EXTRAS=On                     \
             -DALLOY_COMPILE_EXAMPLES=On                   \
             -DALLOY_ENABLE_EXCEPTIONS=On

      - name: Build
        working-directory: ${{env.build-directory}}
        run: cmake --build .

      - name: Test
        working-directory: ${{env.build-directory}}
        run: ctest --output-on-failure

  sanitize:
    name: macOS Xcode ${{matrix.compiler.version}} '${{matrix.sanitizer}}' sanitizer
    runs-on: macos-latest
    needs: test

    env:
      build-directory: build

    strategy:
      matrix:
        sanitizer: [address, undefined]

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Prepare Environment
        run: |
          python -m pip install --upgrade pip
          pip install conan
          brew install ninja
          cmake -E make_directory ${{env.build-directory}}
          cmake -E chdir ${{env.build-directory}} conan install ..

      - name: Configure
        working-directory: ${{env.build-directory}}
        env:
          CC: clang
          CXX: clang++
        run: |
          conan profile new --detect default
          cmake ..                                         \
             -GNinja                                       \
             -DCMAKE_BUILD_TYPE=Debug                      \
             -DALLOY_COMPILE_SELF_CONTAINMENT_TESTS=On     \
             -DALLOY_COMPILE_TESTS=On                      \
             -DALLOY_COMPILE_EXTRAS=On                     \
             -DALLOY_COMPILE_EXAMPLES=On                   \
             -DALLOY_ENABLE_EXCEPTIONS=On                  \
             -DCMAKE_CXX_FLAGS="-fsanitize=${{matrix.sanitizer}}"

      - name: Build
        working-directory: ${{env.build-directory}}
        run: cmake --build .

      - name: Test (Sanitize)
        working-directory: ${{env.build-directory}}
        run: ctest --output-on-failure
