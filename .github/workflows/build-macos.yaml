name: build-macos

on: [push, pull_request]

jobs:
  ci:
    name: macOS ${{ matrix.compiler }} ${{ matrix.arch }} ${{ matrix.build_type }}
    runs-on: ${{ matrix.os }}

    env:
      CMAKE_GENERATOR: Ninja
      CTEST_OUTPUT_ON_FAILURE: ON
      CTEST_PARALLEL_LEVEL: 2

    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest]
        compiler: [xcode]
        arch: [x86_64]
        build_type: [Release]

        include:

          - os: macOS-latest
            compiler: xcode
            version: "11.3"

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install
        run: |
          brew install cmake ninja
          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            brew install gcc@${{ matrix.version }}
            echo "::set-env name=CC::gcc-${{ matrix.version }}"
            echo "::set-env name=CXX::g++-${{ matrix.version }}"
          else
            ls -ls /Applications/
            sudo xcode-select -switch /Applications/Xcode_${{ matrix.version }}.app
            echo "::set-env name=CC::clang"
            echo "::set-env name=CXX::clang++"
          fi
          python -m pip install --upgrade pip
          pip install conan
          conan --version

      - name: Create Conan Profile
        run: |
          conan profile new --detect default

      - name: Configure
        run: |
          cmake -E remove_directory build
          mkdir build
          cd build
          conan install .. -s build_type=${{ matrix.build_type }}
          cmake ..                                         \
             -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}   \
             -DALLOY_COMPILE_SELF_CONTAINMENT_TESTS=On     \
             -DALLOY_COMPILE_TESTS=On                      \
             -DALLOY_COMPILE_EXTRAS=On                     \
             -DALLOY_COMPILE_EXAMPLES=On                   \
             -DALLOY_ENABLE_EXCEPTIONS=On

      - name: Build
        run: |
          cd build
          cmake --build .

      - name: Test
        run: |
          cd build
          ctest --output-on-failure
