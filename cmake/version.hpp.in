/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * THIS HEADER IS GENERATED BY A TOOL - DO NOT MODIFY!
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

/*****************************************************************************
 * \file version.hpp
 * \brief This header defines the general library version information through
 *        macros to allow conditional compilation and library checks.
 *
 * This header defines the following macro symbols:
 * - ALLOY_MAKE_VERSION
 * - ALLOY_VERSION_MAJOR
 * - ALLOY_VERSION_MINOR
 * - ALLOY_VERSION_PATCH
 * - ALLOY_VERSION
 * - ALLOY_VERSION_STRING
 *
 * For more information for the symbols, refer to their respective
 * documentation.
 *
 * THIS HEADER IS GENERATED, AND SHOULD NOT BE MODIFIED DIRECTLY.
 *****************************************************************************/

/*
@LICENSE_TEXT@
*/
#ifndef ALLOY_VERSION_HPP
#define ALLOY_VERSION_HPP

#ifdef ALLOY_VERSION_MAJOR
# error "ALLOY_VERSION_MAJOR defined before inclusion of the version header"
#endif

#ifdef ALLOY_VERSION_MINOR
# error "ALLOY_VERSION_MINOR defined before inclusion of the version header"
#endif

#ifdef ALLOY_VERSION_PATCH
# error "ALLOY_VERSION_PATCH defined before inclusion of the version header"
#endif

#ifdef ALLOY_VERSION_STRING
# error "ALLOY_VERSION_STRING defined before inclusion of the version header"
#endif

//! \def ALLOY_MAKE_VERSION
//! \brief Converts a semantic version of major.minor.patch into a single
//!        integer value for easy macro comparisons
//!
//! \param major the major semantic version
//! \param minor the minor semantic version
//! \param patch the patch semantic version
#define ALLOY_MAKE_VERSION(major,minor,patch) ((major * 100000) + (minor * 1000) + (patch))

//! Major version of this library
#define ALLOY_VERSION_MAJOR @ALLOY_VERSION_MAJOR@

//! Minor version of this library
#define ALLOY_VERSION_MINOR @ALLOY_VERSION_MINOR@

//! Patch version of this library
#define ALLOY_VERSION_PATCH @ALLOY_VERSION_PATCH@

//! The version string (major.minor.patch)
#define ALLOY_VERSION_STRING "@ALLOY_VERSION@"

//! The full version, represented as a single integer
#define ALLOY_VERSION ALLOY_MAKE_VERSION(@ALLOY_VERSION_MAJOR@,@ALLOY_VERSION_MINOR@,@ALLOY_VERSION_PATCH@)

#endif /* ALLOY_VERSION_HPP */
