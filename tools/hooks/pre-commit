#!/usr/bin/env python3

from pathlib import Path
import sys  # nopep8
sys.path.append(str(Path(__file__).resolve().parents[1]))  # nopep8

from python_utilities.git import Git
from python_utilities.format import AnsiFormat
from python_utilities.paths import ProjectPaths
from python_utilities.checks import CheckReporter, CheckScript


def main():

    git = Git()

    modified = git.changed_files()
    staged = git.changed_files(cached=True)

    overlap = set(modified).intersection(staged)

    if len(overlap) > 0:
        print(
            f"{AnsiFormat.YELLOW}CAUTION: The following staged files have "
            f"untracked modifications: {AnsiFormat.RESET}",
            file=sys.stderr
        )
        for file in overlap:
            print(
                f"{AnsiFormat.YELLOW} â€¢ {file}{AnsiFormat.RESET}",
                file=sys.stderr
            )
        print(
            f"{AnsiFormat.YELLOW}This can be ignored if this was intentional."
            f"{AnsiFormat.RESET}",
            file=sys.stderr
        )
        print(file=sys.stderr)

    reporter = CheckReporter("Pre-Commit Verification")

    reporter.add_check(
        CheckScript(
            script=ProjectPaths.tools_root / "check-python-codestyle.py",
            arguments=["--source-group=staged", "--no-progress"],
            message="Checking python codestyle",
        )
    )
    # reporter.add_check(
    #     CheckScript(
    #         script=ProjectPaths.tools_root / "check-cpp-codestyle.py",
    #         arguments=["--source-group=staged", "--no-progress"],
    #         message="Checking C++ codestyle",
    #     )
    # )
    reporter.add_check(
        CheckScript(
            script=ProjectPaths.tools_root / "check-cpp-clang-tidy.py",
            arguments=["--source-group=staged", "--no-progress"],
            message="Checking C++ clang-tidy",
        )
    )
    reporter.add_check(
        CheckScript(
            script=ProjectPaths.tools_root / "check-license-copyright.py",
            arguments=["--source-group=staged", "--no-progress"],
            message="Checking license copyrights",
        )
    )
    reporter.add_check(
        CheckScript(
            script=ProjectPaths.tools_root / "check-trailing-newline.py",
            arguments=["--source-group=staged", "--no-progress"],
            message="Checking trailing newline",
        )
    )
    reporter.add_check(
        CheckScript(
            script=ProjectPaths.tools_root / "check-whitespace.py",
            arguments=["--source-group=staged", "--no-progress"],
            message="Checking whitespace",
        )
    )

    return reporter.report()


if __name__ == "__main__":
    import sys
    sys.exit(main())
